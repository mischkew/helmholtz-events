<?php
namespace Event;

use Underscore\Types\Arrays;


class EventWriter {

    public static function singleEventToJavascript($from, $to, $time, $extra, $title) {
        $js = "{ ";
        $js .= "startDate: '$from', ";
        $js .= "endDate: '$to', ";
        $js .= "title: '$time%$extra$title'";
        $js .= " }";
        return $js;
    }

    public static function eventToJavascript($event) {
        $js = [];
        $from = $event->date->getFrom();
        $to = $event->date->getTo();
        $times = $event->times;
        $extras = $event->extras;
        $title = join($event->titles, " ");

        $maxCount = max(count($times), count($extras));
        if ($maxCount == 0) {
            return [self::singleEventToJavascript($from, $to,  "-", "", $title)];
        }

        for ($i = 0; $i < $maxCount; $i++) {
            $time = array_shift($times);
            if ($time == null) {
                $time = "-";
            }

            $extra = array_shift($extras);
            if ($extra == null) {
                $extra = "";
            } else {
                $extra .= " - ";
            }

            $js[] = self::singleEventToJavascript($from, $to, $time, $extra, $title);
        }

        return $js;
    }

    public static function buildJavascriptFromEvents($events) {
        $js = [
            "/** AUTOGENERATED EVENT DATA **/",
            "'use strict';",
            "",
            "var events = ["
        ];

        $eventJs = Arrays::each($events, function($event) {
            return join(self::eventToJavascript($event), ",\n");
        });
        $js[] = join($eventJs, ",\n");


        $js[] = "];";
        $js[] = "";

        return join($js, "\n");
    }

    public static function writeEventsToFile($events, $filename) {
        $file = fopen($filename, "w") or die("Unable to open file at $filename");
        $js = self::buildJavascriptFromEvents($events);
        fwrite($file, $js);
        fclose($file);
    }
}